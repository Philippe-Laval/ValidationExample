<Window x:Class="ValidationExample.ShellView"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
		xmlns:properties="clr-namespace:ValidationExample.AttachedProperties"
		SizeToContent="WidthAndHeight"		
>

	<Window.Resources>
		
		<ResourceDictionary>

			<Storyboard x:Key="FlashErrorIcon">
				<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" 
									   Storyboard.TargetProperty="(UIElement.Visibility)">
					<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
					<DiscreteObjectKeyFrame KeyTime="00:00:00.2000000" Value="{x:Static Visibility.Visible}"/>
					<DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Hidden}"/>
					<DiscreteObjectKeyFrame KeyTime="00:00:00.6000000" Value="{x:Static Visibility.Visible}"/>
					<DiscreteObjectKeyFrame KeyTime="00:00:00.8000000" Value="{x:Static Visibility.Hidden}"/>
					<DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
				</ObjectAnimationUsingKeyFrames>
			</Storyboard>

			<!-- This template is from Beth Massi's article -->
			<Style x:Key="myErrorTemplate" TargetType="Control">
				<Setter Property="Validation.ErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<DockPanel LastChildFill="True">
								<Ellipse DockPanel.Dock="Right" 
										ToolTip="{Binding ElementName=myTextbox, 
										Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
										Width="15"
										Height="15" 
										Margin="-25,0,0,0"
										StrokeThickness="1" 
										Fill="Red" 
								>
									<Ellipse.Stroke>
										<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
											<GradientStop Color="#FFFA0404" Offset="0"/>
											<GradientStop Color="#FFC9C7C7" Offset="1"/>
										</LinearGradientBrush>
									</Ellipse.Stroke>
									<Ellipse.Triggers>
										<EventTrigger RoutedEvent="FrameworkElement.Loaded">
											<BeginStoryboard Storyboard="{StaticResource FlashErrorIcon}"/>
										</EventTrigger>
									</Ellipse.Triggers>

								</Ellipse>
								<TextBlock DockPanel.Dock="Right" 
								ToolTip="{Binding ElementName=myControl, 
									 Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
								Foreground="White"
								FontSize="11pt" 
								Margin="-15,5,0,0" FontWeight="Bold">!
							<TextBlock.Triggers>
								<EventTrigger RoutedEvent="FrameworkElement.Loaded">
									<BeginStoryboard Storyboard="{StaticResource FlashErrorIcon}"/>
								</EventTrigger>
							</TextBlock.Triggers>
								</TextBlock>
								<Border BorderBrush="Red" BorderThickness="1">
									<AdornedElementPlaceholder Name="myControl"/>
								</Border>
							</DockPanel>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="Validation.HasError" Value="true">
						<Setter Property="ToolTip"
						Value="{Binding RelativeSource={x:Static RelativeSource.Self},
						Path=(Validation.Errors)[0].ErrorContent}"/>
					</Trigger>
				</Style.Triggers>
			</Style>

			<!-- Force the TextBox to use the error template -->
			<Style TargetType="TextBox" BasedOn="{StaticResource myErrorTemplate}" >
				<Setter Property="Margin" Value="2"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="HorizontalAlignment" Value="Stretch"/>
			</Style>

			<!-- Force the TextBox to use the error template -->
			<Style TargetType="PasswordBox" BasedOn="{StaticResource myErrorTemplate}" >
				<Setter Property="Margin" Value="2"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="HorizontalAlignment" Value="Stretch"/>
			</Style>

			<Style TargetType="TextBlock" >
				<Setter Property="Margin" Value="2"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="Foreground" Value="Green"/>
			</Style>

			<Style TargetType="HeaderedContentControl" >
				<Setter Property="Margin" Value="2"/>
				<Setter Property="SnapsToDevicePixels" Value="True"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="FontWeight" Value="Bold"/>
			</Style>

		</ResourceDictionary>

	</Window.Resources>

	<StackPanel Background="White" HorizontalAlignment="Stretch" Margin="4,0,4,6" >

		<HeaderedContentControl Content="Caliburn Micro Validation Example"
				   VerticalAlignment="Center"
				   HorizontalAlignment="Center"
				   FontSize="20" 
		/>

		<TextBlock Text="This will be validated as a valid email adddress"/>
		<!-- This is required and will be validated as a valid email adddress -->
		<Grid Margin="0,0,0,4">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="90"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<HeaderedContentControl Content="Email:"  />
			<TextBox x:Name="EmailAddress" Text="example@mydomain.com" Grid.Column="1" Margin="0,4"/>
		</Grid>
		<TextBlock Text="This will be validated to be in the range 18..65"/>
		<Grid Margin="0,0,0,4">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="90"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<HeaderedContentControl Content="Working Age:"  />
			<TextBox x:Name="Age" Text="25" Grid.Column="1" TextAlignment="Right" Padding="0,0,20,0"  Margin="0,4"/>
		</Grid>
		<TextBlock Text="Enter a password which is at least 8 characters with 1 upper-case, 2 lower-case, 1 number and 1 special character" TextWrapping="Wrap" HorizontalAlignment="Left" MaxWidth="350"/>
		<Grid  Margin="0,0,0,2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="90"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<HeaderedContentControl Content="Password:"  />
			<!-- The binding of IsEnabled is to the ServiceAccount element 
							 because Binding to the DataContext and UseServiceAccount
							 like ServiceAccount seems not to work and this is just fine
			-->
			<PasswordBox x:Name="Password" Grid.Column="1" Padding="0,0,20,0"  Margin="0,4"
				cal:Message.Attach="[Event PasswordChanged] = [Action PasswordChanged($source)]"
				properties:PasswordHelper.Attach="True"
			/>
		</Grid>
		<Button x:Name="Close" Content="Close" Width="80" Height="24" IsEnabled="{Binding NoValidationErrors}" HorizontalAlignment="Right" Margin="4" IsDefault="True" />
		<TextBlock Text="Hover over the error icon when/if shown to see the error message" Foreground="Blue"/>
	</StackPanel>

</Window>
